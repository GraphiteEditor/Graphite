name: Rust Profiling with iai-callgrind

on:
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  profile:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - name: Install Valgrind
      run: |
        sudo apt-get update
        sudo apt-get install -y valgrind

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install iai-callgrind
      run: |
        cargo install iai-callgrind-runner@0.12.3

    # - name: Checkout master branch
    #   run: |
    #     git fetch origin master:master
    #     git checkout master

    - name: Run baseline benchmarks
      run: |
        cargo bench --bench compile_demo_art --features=iai -- --save-baseline=master

    - name: Checkout PR branch
      run: |
        git checkout ${{ github.event.pull_request.head.sha }}

    - name: Run PR benchmarks
      run: |
        cargo bench --bench compile_demo_art --features=iai -- --baseline master > benchmark_results.txt

    - name: Comment PR
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const fs = require('fs');
          const benchmarkResults = fs.readFileSync('benchmark_results.txt', 'utf8');
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.name,
            issue_number: context.issue.number,
            body: `## Performance Benchmark Results

          \`\`\`
          ${benchmarkResults}
          \`\`\``
          });
